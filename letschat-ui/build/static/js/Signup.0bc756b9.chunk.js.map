{"version":3,"sources":["components/TextInput/textInput.tsx","containers/signup/signup.tsx"],"names":["TextInput","name","type","id","onChange","onBlur","onFocus","value","maxLength","minLength","pattern","placeholder","inputRef","onPaste","error","icon","inputClass","Fragment","className","evt","target","ref","autoComplete","message","Control","Feedback","signUpSchema","yup","shape","required","email","password","min","max","Signup","useForm","resolver","yupResolver","defaultValues","control","register","handleSubmit","setValue","errors","toast","useToaster","userApi","useUserApi","src","onSubmit","values","callDoRegister","noValidate","render","to","URLS","LOGIN"],"mappings":"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","file":"static/js/Signup.0bc756b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Form,\r\n  FormControl,\r\n} from 'react-bootstrap'\r\n\r\ninterface TextInputProps {\r\n  name: string;\r\n  type: string;\r\n  id?: string;\r\n  onChange: (args: any) => void;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  value?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  pattern?: string;\r\n  placeholder?: string;\r\n  inputRef?: any;\r\n  onPaste?: () => void;\r\n  error?: any;\r\n  icon?: string | React.ReactNode;\r\n  inputClass?: string;\r\n}\r\n\r\nfunction TextInput({\r\n  name,\r\n  type,\r\n  id,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n  value,\r\n  maxLength,\r\n  minLength,\r\n  pattern,\r\n  placeholder,\r\n  inputRef,\r\n  onPaste,\r\n  error,\r\n  icon,\r\n  inputClass,\r\n}: TextInputProps) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"input-container\">\r\n        <FormControl\r\n          type={type}\r\n          name={name}\r\n          id={id}\r\n          value={value}\r\n          onChange={(evt) => onChange && onChange(evt.target.value)}\r\n          onBlur={onBlur}\r\n          onFocus={onFocus}\r\n          maxLength={maxLength}\r\n          minLength={minLength}\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          ref={inputRef}\r\n          autoComplete={\"no-auto-complete\"}\r\n          onPaste={onPaste}\r\n          className={inputClass}\r\n        />\r\n        {\r\n          icon && <span className=\"input-icon\">{icon}</span>\r\n        }\r\n        {\r\n          error && error.message ? <>\r\n            <Form.Control.Feedback type=\"invalid\" >\r\n              {error.message}\r\n            </Form.Control.Feedback>\r\n          </> : null\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport TextInput from '../../components/TextInput/textInput'\r\nimport { URLS } from '../../config'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport * as yup from 'yup';\r\nimport {\r\n  AiOutlineMail,\r\n  AiOutlineRight,\r\n} from 'react-icons/ai'\r\nimport {\r\n  RiLockPasswordLine,\r\n  RiWechat2Line,\r\n} from 'react-icons/ri'\r\nimport { useUserApi } from '../../_common/hooks/api/appUserApiHook';\r\nimport { useToaster } from '../../_common/hooks/custom/appToasterHook';\r\n\r\ninterface SignUpFormValues {\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n}\r\n\r\nconst signUpSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required'),\r\n  email: yup\r\n    .string()\r\n    .email('Please provide valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required')\r\n    .min(5, 'Password should have minimum 5 characters')\r\n    .max(20, 'Max 20 characters are allowed')\r\n})\r\n\r\nfunction Signup() {\r\n  /**\r\n   * const\r\n   */\r\n  const { register, control, setValue, handleSubmit, errors } = useForm<SignUpFormValues>({\r\n    resolver: yupResolver(signUpSchema),\r\n    defaultValues: {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    },\r\n  })\r\n  const toast = useToaster()\r\n  const userApi = useUserApi()\r\n  /**\r\n   * functions\r\n   */\r\n  const onSignUpSubmit = (values: SignUpFormValues) => {\r\n    userApi.callDoRegister(values, () => { }, (message: string) => {\r\n      toast.error(message);\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"login-box-container\">\r\n      <div className=\"login-box\">\r\n        <div className=\"login-logo-container\">\r\n          <img src=\"/images/icons/android-icon-512x512.png\" />\r\n        </div>\r\n        <h2 className=\"login-text\">Signup</h2>\r\n        <div className=\"login-form-container\">\r\n          <form onSubmit={handleSubmit(onSignUpSubmit)} noValidate>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row login-form-row\">\r\n                <div className=\"col-12 login-form-col\">\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"email\"\r\n                    render={({ onChange, onBlur, value, name, ref }) => (\r\n                      <TextInput\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        inputRef={ref}\r\n                        icon={<AiOutlineMail />}\r\n                        type=\"email\"\r\n                        error={errors.email}\r\n                        placeholder=\"Your email address...\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 login-form-col\">\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"name\"\r\n                    render={({ onChange, onBlur, value, name, ref }) => (\r\n                      <TextInput\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        inputRef={ref}\r\n                        icon={<RiWechat2Line />}\r\n                        type=\"name\"\r\n                        error={errors.name}\r\n                        placeholder=\"Your name...\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <Controller\r\n                    control={control}\r\n                    name=\"password\"\r\n                    render={({ onChange, onBlur, value, name, ref }) => (\r\n                      <TextInput\r\n                        name={name}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        inputRef={ref}\r\n                        icon={<RiLockPasswordLine />}\r\n                        type=\"password\"\r\n                        error={errors.password}\r\n                        placeholder=\"Your password...\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12 login-form-action-col\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Signup\r\n                    <AiOutlineRight />\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-12 login-form-col signup-link-col\">\r\n                  Already have an account? <Link to={URLS.LOGIN}>Login</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n"],"sourceRoot":""}